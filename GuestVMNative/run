#! /bin/bash
#
# Copyright (c) 2009 Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, California 95054, U.S.A. All rights reserved.
#
# U.S. Government Rights - Commercial software. Government users are
# subject to the Sun Microsystems, Inc. standard license agreement and
# applicable provisions of the FAR and its supplements.
#
# Use is subject to license terms.
#
# This distribution may include materials developed by third parties.
#
# Parts of the product may be derived from Berkeley BSD systems,
# licensed from the University of California. UNIX is a registered
# trademark in the U.S.  and in other countries, exclusively licensed
# through X/Open Company, Ltd.
#
# Sun, Sun Microsystems, the Sun logo and Java are trademarks or
# registered trademarks of Sun Microsystems, Inc. in the U.S. and other
# countries.
#
# This product is covered and controlled by U.S. Export Control laws and
# may be subject to the export or import laws in other
# countries. Nuclear, missile, chemical biological weapons or nuclear
# maritime end uses or end users, whether direct or indirect, are
# strictly prohibited. Export or reexport to countries subject to
# U.S. embargo or to entities identified on U.S. export exclusion lists,
# including, but not limited to, the denied persons and specially
# designated nationals lists is strictly prohibited.
#
# Script to run Guest VM images
#
java_launcher_compat=1
config="generic"
echocmd=0
mainclass=""
debug=""
upcalls=""
xtra_args=""
vmargs=""
run=1
help=0
name=""
classpath="/guestvm/image/GuestVM/bin"
guest=""
jar=""
vmalloc="-XX:+UseVirtualMemory"

function show_help() {
  echo "run the Guest VM image
options:
  -k            set keyword argument mode
  -echo         echo the full xm create command
  -cf <cf>      set the domain config file to xmconfigs/domain_config_cf (default generic)
  -d            run in debug mode (wait for Inspector to connect)
  -a <arg>      force arg as program arg (only necessary if arg has leading -)
  -n            force -echo but do not execute the xm create command
  -J<args>      set VM argument(s)
  -main class   main class to invoke
  -mx <n>       equivalent to -J-Xmxn
  -ms <n>       equivalent to -J-Xmsn
  -name <name>  set domain name (default GuestVM-mainclass-\$USER or GuestVM-\$USER)
  -memory <n>   set initial domain memory to n (default: from config file)
  -maxmem <n>   set maximum domain memory to n (default: from config file)
  -jar <file>   extract main class from jar file
  -js           enable Guest VM's Java thread scheduler"
}

while [ "$1" != "" ] ;
do
#  echo "$1"
  case "$1" in
  -k )
    java_launcher_compat=0
    ;;
  -echo )
    echocmd=1
    ;;
  -help )
    help=1
    ;;
  -cf )
    shift
    config=$1
    ;;
  -d )
    debug="-XX:GUKDebug"
    ;;
  -a )
    shift
    if [ "$xtra_args" = "" ] ;
    then
      xtra_args=$1
    else
      xtra_args="$xtra_args $1"
    fi
    ;;
  -n )
    echocmd=1
    run=0
    ;;
  -J* )
    if [ "$vmargs" = "" ] ;
    then
      vmargs=${1/-J/}
    else
      vmargs="$vmargs ${1/-J/}"
    fi
    ;;
  -main )
    shift
    mainclass=$1
    ;;
  -mx )
    shift
    if [ "$vmargs" = "" ] ;
    then
      vmargs="-Xmx$1"
    else
      vmargs="$vmargs -Xmx$1"
    fi
    ;;
  -ms )
    shift
    if [ "$vmargs" = "" ] ;
    then
      vmargs="-Xms$1"
    else
      vmargs="$vmargs -Xms$1"
    fi
    ;;
  -name )
    shift
    name=$1
    ;;
  -memory )
    shift
    memory="memory=$1"
    ;;
  -maxmem )
    shift
    maxmem="maxmem=$1"
    ;;
  -cp )
    shift
    classpath=$1
    ;;
  -jar )
    shift
    jar=$1
    if [ "$java_launcher_compat" -eq 1 ] ; then
        shift
        xtra_args=$*
        break
    fi
    ;;
  -g )
    shift
    guest=$1
    ;;
  -js )
    upcalls="-XX:GUKAS"
    ;;
  -* )
    echo "unknown option $1"
    exit 1
    ;;
  * )
    if [ "$java_launcher_compat" -eq 1 ] ; then
        if [ "$jar" == "" ] ; then
          mainclass=$1
        fi
        shift
        xtra_args=$*
        break
    else
        if [ "$xtra_args" = "" ] ;
        then
          xtra_args=$1
        else
          xtra_args="$xtra_args $1"
        fi
    fi
    ;;
  esac
  shift
done

if [ $help -eq 1 ] ; then
  show_help
  exit 0
fi

if [ "$name" == "" ] ; then
  if [ "$mainclass" != "" ] ; then
    name=GuestVM-$mainclass-${USER}
  else
    name=GuestVM-${USER}
  fi
fi
if [ "$jar" == "" ] ; then
  cp="-cp $classpath"
else
  cp="-jar $jar"
fi

extra="$debug $vmalloc $upcalls $vmargs $cp $mainclass $xtra_args"
if [ ${#extra} -ge 800 ] ; then
  echo "Xen limitation: extra argument is too long"
  exit 1
fi

if [ "$echocmd" -eq 1 ] ; then
  echo xm create -c xmconfigs/domain_config_${config} extra="$extra" name=$name $memory $maxmem
fi
if [ "$run" -eq 1 ] ; then
  xm create -c xmconfigs/domain_config_${config} extra="$extra" name=$name $memory $maxmem
fi
exit 0

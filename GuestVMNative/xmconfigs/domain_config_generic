#
# Copyright (c) 2009 Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, California 95054, U.S.A. All rights reserved.
# 
# U.S. Government Rights - Commercial software. Government users are
# subject to the Sun Microsystems, Inc. standard license agreement and
# applicable provisions of the FAR and its supplements.
# 
# Use is subject to license terms.
# 
# This distribution may include materials developed by third parties.
# 
# Parts of the product may be derived from Berkeley BSD systems,
# licensed from the University of California. UNIX is a registered
# trademark in the U.S.  and in other countries, exclusively licensed
# through X/Open Company, Ltd.
# 
# Sun, Sun Microsystems, the Sun logo and Java are trademarks or
# registered trademarks of Sun Microsystems, Inc. in the U.S. and other
# countries.
# 
# This product is covered and controlled by U.S. Export Control laws and
# may be subject to the export or import laws in other
# countries. Nuclear, missile, chemical biological weapons or nuclear
# maritime end uses or end users, whether direct or indirect, are
# strictly prohibited. Export or reexport to countries subject to
# U.S. embargo or to entities identified on U.S. export exclusion lists,
# including, but not limited to, the denied persons and specially
# designated nationals lists is strictly prohibited.
# 
#
#  -*- mode: python; -*-
#============================================================================
# Generic Python configuration setup for 'xm create' for Guest VM.
# This script sets the parameters used when a domain is created using 'xm create'.
# You use a separate script for each domain you want to create, or
# you can set the parameters for the domain on the xm command line.
# This generic version gets all the data from the environment.
#============================================================================

#----------------------------------------------------------------------------
# Kernel image file.
kernel = "guestvm"

# defaults to 1 if unset
vcpus = os.environ.get("VCPUS")

# Initial memory allocation (in megabytes) for the new domain.
if os.environ.get("MEMORY") != None :
  memory = os.environ.get("MEMORY")
else : 
  memory = 128

# Initial memory allocation (in megabytes) for the new domain.
if os.environ.get("MAXMEM") != None :
  maxmem = os.environ.get("MAXMEM")
else : 
  maxmem = 1024

if os.environ.get("DISK") != None :
    disk = [os.environ.get("DISK")]

# A name for your domain. All domains must have different names.
name = "GuestVM-" + os.environ.get("USER")

if os.environ.get("BRIDGE") != None :
    vif=['bridge=' + os.environ.get("BRIDGE")]

on_crash = 'destroy'

# basic stuff needed to support the JDK
class java.io.UnixFileSystem
forceconstructorstubs java.io.UnixFileSystem
forcemethod java.io.File.<clinit>
forcemethod java.lang.Runtime.*
forcemethod sun.misc.OSEnvironment.initialize
forcemethod sun.misc.Launcher.getLauncher
forcemethod java.util.zip.ZipFile.entries
forceinvocationstub java.lang.System.initializeSystemClass
forceinvocationstub java.lang.Runtime.loadLibrary0
forceinvocationstub java.io.UnixFileSystem.initIDs
forceinvocationstub java.util.zip.ZipEntry.initIDs
forceinvocationstub java.util.zip.ZipFile.initIDs
forceinvocationstub java.util.zip.Deflater.initIDs
forceinvocationstub java.util.zip.Inflater.initIDs
forceinvocationstub java.lang.UNIXProcess.initIDs
forceinvocationstub java.io.FileInputStream.initIDs
forceinvocationstub java.io.FileOutputStream.initIDs
forceinvocationstub java.io.FileDescriptor.initIDs
forceinvocationstub java.io.RandomAccessFile.initIDs
forcemethod java.lang.System.initializeSystemClass
class sun.security.action.LoadLibraryAction
package sun.reflect
package sun.misc
class sun.jkernel.DownloadManager
resetlauncher
package sun.util.calendar
resetfield sun.util.calendar.ZoneInfo.aliasTable
resetfield sun.util.calendar.ZoneInfoFile.zoneInfoMappings
resetfield sun.util.calendar.ZoneInfoFile.rawOffsets
resetfield sun.util.calendar.ZoneInfoFile.rawOffsetIndices
resetfield sun.util.calendar.ZoneInfoFile.zoneIDs
resetfield sun.util.calendar.ZoneInfoFile.excludedIDs
resetfield sun.util.calendar.ZoneInfoFile.hasNoExcludeList
resetfield sun.util.calendar.ZoneInfoFile.zoneInfoObjects
resetfield sun.util.calendar.ZoneInfoFile.ziDir
reinitclass sun.util.calendar.ZoneInfoFile
# have to implement java.util.TimeZone.getSystemTimeZoneID if we reset this field.
# resetfield java.util.TimeZone.defaultTimeZone
package sun.net.www
package sun.net.www.protocol.jar
package sun.nio
# we can't load all the classes in sun.nio.ch because there are implementations
# for multiple operating systems that may not initialize due to, e.g., missing native methods.
# E.g. EPollArrayWrapper. We just need those for which we have to substitute native methods.
# Have to init now else FileKey might be compiled first and it accesses the native library but doesn't load it.
classinit sun.nio.ch.IOUtil
# Have to load sun.nio.ch.Util upfront as it is referenced by IOUtil and loads the nio native library. The build fails
# if this is done lazily because it alters data in ClassLoader.NativeLibrary that has already been processed.
class sun.nio.ch.Util
class sun.nio.ch.FileKey
class sun.nio.ch.IOStatus
forcemethod sun.nio.ch.JDK_sun_nio_ch_IOUtil.*
forcemethod sun.nio.ch.GuestVMNativePollArrayWrapper.*
class sun.nio.ch.GuestVMNativePollArrayWrapper$PollOut
class sun.nio.ch.GuestVMNativePollArrayWrapper$PollThread
forcemethod sun.nio.ch.BBNativeDispatcher.*
# these get initialized to BBNativeDispatcher at run time
# but we make sure the old host values are nulled out anyway.
class sun.nio.ch.DatagramChannelImpl
resetfield sun.nio.ch.DatagramChannelImpl.nd
class sun.nio.ch.ServerSocketChannelImpl
resetfield sun.nio.ch.ServerSocketChannelImpl.nd
class sun.nio.ch.SocketChannelImpl
resetfield sun.nio.ch.SocketChannelImpl.nd
class sun.nio.ch.SinkChannelImpl
resetfield sun.nio.ch.SinkChannelImpl.nd
class sun.nio.ch.SourceChannelImpl
resetfield sun.nio.ch.SourceChannelImpl.nd

package java.util.jar
package java.util.concurrent
package java.util.concurrent.atomic
package java.util.concurrent.locks
forcemethod sun.security.action.LoadLibraryAction.<init>
package com.sun.max.vm.run.guestvm
package com.sun.max.vm.guestvm
package com.sun.guestvm.guk
classinit com.sun.guestvm.guk.GUK
package com.sun.guestvm.guk.x64
package com.sun.guestvm.memory
package com.sun.guestvm.sched
forcemethod com.sun.guestvm.guk.GUKPageTables.*
forcemethod com.sun.guestvm.guk.GUKPagePool.*
forcemethod com.sun.guestvm.guk.GUKMachinePagePool.*
forcemethod com.sun.guestvm.memory.HeapPool.*
forcemethod com.sun.guestvm.memory.StackPool.*
forcemethod com.sun.guestvm.memory.CodePool.*
forcemethod com.sun.guestvm.sched.GUKVmThread.*
package com.sun.guestvm.monitor
package com.sun.guestvm.spinlock
package com.sun.guestvm.spinlock.guk
package com.sun.guestvm.spinlock.tas
package com.sun.guestvm.spinlock.tas.inline
forcemethod com.sun.guestvm.spinlock.NPFieldSpinLock.*
forcemethod com.sun.guestvm.spinlock.NPCountingSpinLock.*
forcemethod com.sun.guestvm.spinlock.tas.TASSpinLock.*
forcemethod com.sun.guestvm.spinlock.tas.TTASSpinLock.*
forcemethod com.sun.guestvm.spinlock.tas.TASTSpinLock.*
forcemethod com.sun.guestvm.spinlock.guk.GUKSpinLock.*
forcemethod com.sun.guestvm.spinlock.guk.DIGUKSpinLock.*
forcemethod com.sun.guestvm.spinlock.tas.inline.ISpinLock.*
forcemethod com.sun.guestvm.guk.GUKTrace.xprint
package com.sun.guestvm.jdk
package com.sun.guestvm.zip
package com.sun.guestvm.util
# java.util.logging has bootstrap issues for the low levels
# of the system, e.g. it likes to open files, read properties
# so the kernel  uses a very simple logging handler.
# The Level class is the only thing we need in the image,
# standard logging is loaded at run-time (there are tricky
# re-initialization issues if it is included in the image)
class java.util.logging.Level
package com.sun.guestvm.logging
resetfield com.sun.guestvm.logging.Logger._singleton
# we don't want these fields in the image - and they cause the build to fail
resetfield java.lang.reflect.Proxy.loaderToCache
resetfield java.lang.reflect.Proxy.proxyClasses
# this resets the remaining state
reinitclass java.lang.reflect.Proxy
package java.text
# Eager initialization because of library loading
classinit java.text.Bidi
package java.text.spi
package sun.util
package com.sun.security.auth
package sun.security.acl
class sun.security.action.GetBooleanAction
class sun.security.provider.PolicyFile
reinitclass sun.security.util.Debug
# this has final statics that are inappropriate for the target
omitclass java.io.File$LazyInitialization
#
reinitclass sun.util.LocaleServiceProviderPool
reinitclass java.text.SimpleDateFormat
reinitclass java.text.DateFormatSymbols
package gnu.java.util.zip
package com.sun.guestvm.process
package com.sun.guestvm.error
# Eager initialization because of library loading
classinit sun.management.ManagementFactory
classinit sun.management.VMManagementImpl
reinitclass sun.management.VMManagementImpl

class java.security.cert.Certificate

package com.sun.guestvm.attach
package com.sun.guestvm.profiler



/*
 * Copyright (c) 2007 Sun Microsystems, Inc.  All rights reserved.
 *
 * Sun Microsystems, Inc. has intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation, these intellectual property
 * rights may include one or more of the U.S. patents listed at http://www.sun.com/patents and one or
 * more additional patents or pending patent applications in the U.S. and in other countries.
 *
 * U.S. Government Rights - Commercial software. Government users are subject to the Sun
 * Microsystems, Inc. standard license agreement and applicable provisions of the FAR and its
 * supplements.
 *
 * Use is subject to license terms. Sun, Sun Microsystems, the Sun logo, Java and Solaris are trademarks or
 * registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries. All SPARC trademarks
 * are used under license and are trademarks or registered trademarks of SPARC International, Inc. in the
 * U.S. and other countries.
 *
 * UNIX is a registered trademark in the U.S. and other countries, exclusively licensed through X/Open
 * Company, Ltd.
 */
/*VCSID=8c74f8b8-a169-4ac2-907f-bdae76b4460f*/
package com.sun.guestvm.jdk;


import java.util.zip.*;

import com.sun.max.annotate.*;
import com.sun.max.program.ProgramError;

@METHOD_SUBSTITUTIONS(Inflater.class)
public class JDK_java_util_zip_Inflater {

    @SUBSTITUTE
    private static void initIDs() {
    }

    private static long init(boolean nowrap) {
    }

    @SUBSTITUTE
    private static void setDictionary(long strm, byte[] b, int off, int len) {
     }

    @SUBSTITUTE
    private int inflateBytes(byte[] b, int off, int len) throws DataFormatException {
    }

    @SUBSTITUTE
    private static int getAdler(long strm) {
   }

    @SUBSTITUTE
    private static long getBytesRead(long strm) {
    }

    @SUBSTITUTE
    private static long getBytesWritten(long strm) {
    }

    @SUBSTITUTE
    private static void reset(long strm) {
   }

    @SUBSTITUTE
    private static void end(long strm) {
    }

}
